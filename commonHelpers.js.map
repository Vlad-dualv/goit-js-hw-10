{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n//------------------------------GIVEN CODE----------------------------------\n\nlet userSelectedDate;\nlet timeInterval;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        timeInterval = userSelectedDate - options.defaultDate;\n\n        if (timeInterval < 1) {\n            iziToast.show({\n                message: \"Please choose a date in the future\",\n                position: \"topRight\",\n                messageColor: \"white\",\n                backgroundColor: \"red\",\n            });\n        } else {\n            startBtn.disabled = false;\n        }\n    },\n};\n\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n}\n\n//------------------------ MY CODE ----------------------------------\n\nconst calendar = flatpickr(\"#datetime-picker\", options);\nconst startBtn = document.querySelector(\"[data-start]\");\nconst inputTime = document.querySelector(\"#datetime-picker\")\nconst timeShow = document.querySelectorAll(\".value\");\n\n\nstartBtn.disabled = true;\n\nstartBtn.addEventListener('click', event => {\n    const repeatTime = setInterval(() => {\n        timeInterval = userSelectedDate - new Date();\n        startBtn.disabled = true;\n        inputTime.disabled = true;\n\n        if (timeInterval < 1) {\n            startBtn.disabled = true;\n            inputTime.disabled = false;\n            clearInterval(repeatTime); \n            return;\n        }\n\n        const timer = convertMs(timeInterval);\n\n        timeShow[0].textContent = timer.days.toString().padStart(2, '0');\n        timeShow[1].textContent = timer.hours.toString().padStart(2, '0');\n        timeShow[2].textContent = timer.minutes.toString().padStart(2, '0');\n        timeShow[3].textContent = timer.seconds.toString().padStart(2, '0');\n    }, 1000);\n});\n\n\n\n\n\n\n\n"],"names":["userSelectedDate","timeInterval","options","selectedDates","iziToast","startBtn","convertMs","ms","days","hours","minutes","seconds","flatpickr","inputTime","timeShow","event","repeatTime","timer"],"mappings":"2GAQA,IAAIA,EACAC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBH,EAAmBG,EAAc,CAAC,EAClCF,EAAeD,EAAmBE,EAAQ,YAEtCD,EAAe,EACfG,EAAS,KAAK,CACV,QAAS,qCACT,SAAU,WACV,aAAc,QACd,gBAAiB,KACjC,CAAa,EAEDC,EAAS,SAAW,EAE3B,CACL,EAGA,SAASC,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAIiBC,EAAU,mBAAoBV,CAAO,EACtD,MAAMG,EAAW,SAAS,cAAc,cAAc,EAChDQ,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,iBAAiB,QAAQ,EAGnDT,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASU,GAAS,CACxC,MAAMC,EAAa,YAAY,IAAM,CAKjC,GAJAf,EAAeD,EAAmB,IAAI,KACtCK,EAAS,SAAW,GACpBQ,EAAU,SAAW,GAEjBZ,EAAe,EAAG,CAClBI,EAAS,SAAW,GACpBQ,EAAU,SAAW,GACrB,cAAcG,CAAU,EACxB,MACH,CAED,MAAMC,EAAQX,EAAUL,CAAY,EAEpCa,EAAS,CAAC,EAAE,YAAcG,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC/DH,EAAS,CAAC,EAAE,YAAcG,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEH,EAAS,CAAC,EAAE,YAAcG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAClEH,EAAS,CAAC,EAAE,YAAcG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACrE,EAAE,GAAI,CACX,CAAC"}